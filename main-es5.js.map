{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,sJAAsJ,4DAA4D,QAAQ,6BAA6B,qHAAqH,eAAe,0JAA0J,4CAA4C,UAAU,aAAa,YAAY,2FAA2F,cAAc,gJAAgJ,MAAM,yC;;;;;;;;;;;ACAn2B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACAiB;AAOhF;IALA;QAOE,UAAK,GAAG,OAAO,CAAC;QAChB,gBAAW,GAAG,EAAE,CAAC;QACjB,SAAI,GAAG,EAAE,CAAC;QACV,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,IAAI,CAAC;IAoBf,CAAC;IAlBC,iCAAU,GAAV,UAAW,MAAM;QACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,IAAI,CAAC,WAAW,GAAG,EAAE;YACrB,OAAM;SACP;QACD,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,EAAE;YACrB,OAAM;SACP;QACD,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,GAAG;IAChC,CAAC;IACD,sCAAe,GAAf;QACE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;SACjC;IACH,CAAC;IAlBsC;QAAtC,+DAAS,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;+CAAgC;IAP3D,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACG;AACG;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,0DAAW;gBACX,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AChBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n    <h2 style=\\\"color: blue;\\\">Enter键输入，Ctrl+Enter清除</h2>\\n    <h2 style=\\\"color: black;\\\">状态:{{focused?'正常':'未聚焦，请点击输入框聚焦'}}</h2>\\n    <label><input type=\\\"checkbox\\\" [(ngModel)]=\\\"force\\\" (ngModelChange)=\\\"force?input.focus():null\\\">强制聚焦:{{force?'是':'否'}}</label>\\n    <div style=\\\"text-align:center\\\">\\n        <button #input (focus)=\\\"focused=true\\\" (keypress)=\\\"keypressed($event)\\\" (blur)=\\\"focused=false;force?input.focus():null\\\" style=\\\"width: 0;height: 0;border: none; padding: 0;\\\"></button>\\n        <textarea [(ngModel)]=\\\"description\\\" cols=\\\"6\\\" style=\\\"width: 100%;height: 100px;\\\" (focus)=\\\"input.focus()\\\"></textarea>\\n    </div>\\n    <h2>已输入：</h2>\\n    <ul>\\n        <li *ngFor=\\\"let item of data\\\">\\n            <div>{{item}}</div>\\n        </li>\\n    </ul>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n\n  title = 'input';\n  description = '';\n  data = [];\n  focused = false;\n  force = true;\n  @ViewChild('input', { static: false }) input: ElementRef<HTMLElement>;\n  keypressed($event) {\n    console.log($event)\n    if ($event.keyCode === 13) {\n      this.data.unshift(this.description)\n      this.description = ''\n      return\n    }\n    if ($event.keyCode === 10) {\n      this.description = ''\n      return\n    }\n    this.description += $event.key\n  }\n  ngAfterViewInit(): void {\n    if (this.force) {\n      this.input.nativeElement.focus()\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}